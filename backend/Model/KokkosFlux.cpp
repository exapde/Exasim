void KokkosFlux(dstype* f, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Flux", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		dstype t2 = udg2*udg2;
		dstype t3 = 1.0/(udg1*udg1);
		dstype t4 = 1.0/udg1;
		dstype t5 = 1.0/param2;
		dstype t6 = t2*t3*(1.0/2.0);
		dstype t7 = udg3*udg3;
		dstype t8 = t3*t7*(1.0/2.0);
		dstype t9 = t6+t8;
		dstype t23 = t9*udg1;
		dstype t10 = -t23+udg4;
		dstype t11 = param1-1.0;
		dstype t22 = t4*udg3*udg5;
		dstype t12 = -t22+udg7;
		dstype t13 = t4*t12;
		dstype t24 = t4*udg2*udg9;
		dstype t14 = -t24+udg10;
		dstype t15 = t4*t14;
		dstype t16 = t13+t15;
		dstype t21 = t4*udg2*udg5;
		dstype t17 = -t21+udg6;
		dstype t18 = t4*t17*2.0;
		dstype t29 = t4*udg3*udg9;
		dstype t19 = -t29+udg11;
		dstype t20 = t18-t4*t19;
		dstype t25 = t5*t16;
		dstype t26 = t4*udg2*udg3;
		dstype t27 = t25+t26;
		dstype t28 = t10*t11;
		dstype t30 = t4*udg4;
		dstype t31 = t4*t10*t11;
		dstype t32 = t30+t31;
		dstype t33 = t4*t17;
		dstype t34 = t33-t4*t19*2.0;
		dstype t35 = 1.0/param3;
		dstype t36 = 1.0/t11;
		f[0*ng+i] = udg2;
		f[1*ng+i] = t28+t2*t4+t5*t20*(2.0/3.0);
		f[2*ng+i] = t27;
		f[3*ng+i] = t32*udg2+t4*t5*t16*udg3+t4*t5*t20*udg2*(2.0/3.0)-param1*t3*t5*t35*t36*(t11*udg1*(-udg8+t9*udg5+udg1*(t3*t12*udg3+t3*t17*udg2))+t10*t11*udg5);
		f[4*ng+i] = udg3;
		f[5*ng+i] = t27;
		f[6*ng+i] = t28+t4*t7-t5*t34*(2.0/3.0);
		f[7*ng+i] = t32*udg3+t4*t5*t16*udg2-t4*t5*t34*udg3*(2.0/3.0)-param1*t3*t5*t35*t36*(t11*udg1*(-udg12+t9*udg9+udg1*(t3*t14*udg2+t3*t19*udg3))+t10*t11*udg9);
	});
}

