void KokkosFbou1(dstype* f, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Fbou1", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype param4 = param[3];
		dstype param10 = param[9];
		dstype tau1 = tau[0];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		dstype uhg1 = uhg[0*ng+i];
		dstype uhg2 = uhg[1*ng+i];
		dstype uhg3 = uhg[2*ng+i];
		dstype uhg4 = uhg[3*ng+i];
		dstype odg5 = odg[4*ng+i];
		dstype nlg1 = nlg[0*ng+i];
		dstype nlg2 = nlg[1*ng+i];
		dstype t2 = param4*param4;
		dstype t3 = udg2*udg2;
		dstype t4 = udg3*udg3;
		dstype t5 = 1.0/3.141592653589793;
		dstype t6 = param1-1.0;
		dstype t7 = 1.0/param2;
		dstype t8 = 1.0/param3;
		dstype t9 = udg1*1.0E+3;
		dstype t11 = param10+5.52E+2/5.0;
		dstype t12 = udg1-1.0/1.0E+2;
		dstype t10 = 1.0/t6;
		dstype t13 = t9-1.0E+1;
		dstype t14 = atan(t13);
		dstype t15 = t5*t14;
		dstype t16 = t15+1.0/2.0;
		dstype t17 = t12*t16;
		dstype t18 = t17*1.0E+3;
		dstype t19 = t17+3.183097800805168E-4;
		dstype t21 = t17+1.031830978008052E-2;
		dstype t20 = t19*t19;
		dstype t22 = t18+3.183097800805168E-1;
		dstype t24 = 1.0/t21;
		dstype t23 = atan(t22);
		dstype t25 = t24*t24;
		dstype t26 = t24*udg4;
		dstype t27 = t20*1.0E+6;
		dstype t28 = t24*udg2*udg3;
		dstype t29 = t27+1.0;
		dstype t30 = t5*t23;
		dstype t31 = (t3*t25)/2.0;
		dstype t32 = (t4*t25)/2.0;
		dstype t33 = 1.0/t29;
		dstype t35 = t31+t32;
		dstype t34 = t5*t22*t33;
		dstype t36 = t21*t35;
		dstype t39 = t30+t34+1.0/2.0;
		dstype t41 = t6*(t36-udg4)*-1.0E+3;
		dstype t42 = t41-1.0;
		dstype t47 = t24*t39*udg2*udg5;
		dstype t48 = t24*t39*udg3*udg5;
		dstype t49 = t24*t39*udg2*udg9;
		dstype t50 = t24*t39*udg3*udg9;
		dstype t43 = atan(t42);
		dstype t62 = -t24*(t50-udg11);
		dstype t64 = t24*(t50-udg11)*-2.0;
		dstype t45 = t5*t43;
		dstype t46 = t45+1.0/2.0;
		dstype t67 = -t46*(t6*(t36-udg4)+1.0/1.0E+3);
		dstype t68 = t46*(t6*(t36-udg4)+1.0/1.0E+3)*-1.0E+3;
		dstype t70 = pow(t46*(t6*(t36-udg4)+1.0/1.0E+3)-3.183097800805168E-4,2.0);
		dstype t78 = -t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3);
		dstype t83 = -1.0/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t71 = t67+1.318309780080517E-3;
		dstype t72 = t68+3.183097800805168E-1;
		dstype t74 = t70*1.0E+6;
		dstype t79 = param1*t2*t78;
		dstype t84 = t26+t78;
		dstype t73 = atan(t72);
		dstype t75 = t74+1.0;
		dstype t81 = pow(t79,3.0/2.0);
		dstype t76 = t5*t73;
		dstype t77 = 1.0/t75;
		dstype t90 = (t7*t11*t81*(t24*(t48-udg7)+t24*(t49-udg10)))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t88 = -t5*t77*(t46*(t6*(t36-udg4)+1.0/1.0E+3)*1.0E+3-3.183097800805168E-1);
		dstype t89 = t76+t88+1.0/2.0;
		f[0*ng+i] = nlg1*(udg2+odg5*t39*udg5)+nlg2*(udg3+odg5*t39*udg9)+tau1*(udg1-uhg1);
		f[1*ng+i] = nlg2*(t28+t90+odg5*udg10)+tau1*(udg2-uhg2)+nlg1*(t71+odg5*udg6+t3*t24+(t7*t11*t81*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[2*ng+i] = nlg1*(t28+t90+odg5*udg7)+tau1*(udg3-uhg3)+nlg2*(t71+odg5*udg11+t4*t24-(t7*t11*t81*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[3*ng+i] = nlg1*(odg5*udg8+t84*udg2+t24*t90*udg3+(t7*t11*t24*t81*udg2*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg5*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg8+t21*(t25*udg2*(t47-udg6)+t25*udg3*(t48-udg7))-t35*t39*udg5)))+nlg2*(odg5*udg12+t84*udg3+t24*t90*udg2-(t7*t11*t24*t81*udg3*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg9*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg12+t21*(t25*udg2*(t49-udg10)+t25*udg3*(t50-udg11))-t35*t39*udg9)))+tau1*(udg4-uhg4);
	});
}

void KokkosFbou2(dstype* f, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Fbou2", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype param4 = param[3];
		dstype param10 = param[9];
		dstype tau1 = tau[0];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		dstype uhg1 = uhg[0*ng+i];
		dstype uhg2 = uhg[1*ng+i];
		dstype uhg3 = uhg[2*ng+i];
		dstype uhg4 = uhg[3*ng+i];
		dstype odg5 = odg[4*ng+i];
		dstype nlg1 = nlg[0*ng+i];
		dstype nlg2 = nlg[1*ng+i];
		dstype t2 = param4*param4;
		dstype t3 = udg2*udg2;
		dstype t4 = udg3*udg3;
		dstype t5 = 1.0/3.141592653589793;
		dstype t6 = param1-1.0;
		dstype t7 = 1.0/param2;
		dstype t8 = 1.0/param3;
		dstype t9 = udg1*1.0E+3;
		dstype t11 = param10+5.52E+2/5.0;
		dstype t12 = udg1-1.0/1.0E+2;
		dstype t10 = 1.0/t6;
		dstype t13 = t9-1.0E+1;
		dstype t14 = atan(t13);
		dstype t15 = t5*t14;
		dstype t16 = t15+1.0/2.0;
		dstype t17 = t12*t16;
		dstype t18 = t17*1.0E+3;
		dstype t19 = t17+3.183097800805168E-4;
		dstype t21 = t17+1.031830978008052E-2;
		dstype t20 = t19*t19;
		dstype t22 = t18+3.183097800805168E-1;
		dstype t24 = 1.0/t21;
		dstype t23 = atan(t22);
		dstype t25 = t24*t24;
		dstype t26 = t24*udg4;
		dstype t27 = t20*1.0E+6;
		dstype t28 = t24*udg2*udg3;
		dstype t29 = t27+1.0;
		dstype t30 = t5*t23;
		dstype t31 = (t3*t25)/2.0;
		dstype t32 = (t4*t25)/2.0;
		dstype t33 = 1.0/t29;
		dstype t35 = t31+t32;
		dstype t34 = t5*t22*t33;
		dstype t36 = t21*t35;
		dstype t39 = t30+t34+1.0/2.0;
		dstype t41 = t6*(t36-udg4)*-1.0E+3;
		dstype t42 = t41-1.0;
		dstype t47 = t24*t39*udg2*udg5;
		dstype t48 = t24*t39*udg3*udg5;
		dstype t49 = t24*t39*udg2*udg9;
		dstype t50 = t24*t39*udg3*udg9;
		dstype t43 = atan(t42);
		dstype t62 = -t24*(t50-udg11);
		dstype t64 = t24*(t50-udg11)*-2.0;
		dstype t45 = t5*t43;
		dstype t46 = t45+1.0/2.0;
		dstype t67 = -t46*(t6*(t36-udg4)+1.0/1.0E+3);
		dstype t68 = t46*(t6*(t36-udg4)+1.0/1.0E+3)*-1.0E+3;
		dstype t70 = pow(t46*(t6*(t36-udg4)+1.0/1.0E+3)-3.183097800805168E-4,2.0);
		dstype t78 = -t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3);
		dstype t83 = -1.0/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t71 = t67+1.318309780080517E-3;
		dstype t72 = t68+3.183097800805168E-1;
		dstype t74 = t70*1.0E+6;
		dstype t79 = param1*t2*t78;
		dstype t84 = t26+t78;
		dstype t73 = atan(t72);
		dstype t75 = t74+1.0;
		dstype t81 = pow(t79,3.0/2.0);
		dstype t76 = t5*t73;
		dstype t77 = 1.0/t75;
		dstype t90 = (t7*t11*t81*(t24*(t48-udg7)+t24*(t49-udg10)))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t88 = -t5*t77*(t46*(t6*(t36-udg4)+1.0/1.0E+3)*1.0E+3-3.183097800805168E-1);
		dstype t89 = t76+t88+1.0/2.0;
		f[0*ng+i] = nlg1*(udg2+odg5*t39*udg5)+nlg2*(udg3+odg5*t39*udg9)+tau1*(udg1-uhg1);
		f[1*ng+i] = nlg2*(t28+t90+odg5*udg10)+tau1*(udg2-uhg2)+nlg1*(t71+odg5*udg6+t3*t24+(t7*t11*t81*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[2*ng+i] = nlg1*(t28+t90+odg5*udg7)+tau1*(udg3-uhg3)+nlg2*(t71+odg5*udg11+t4*t24-(t7*t11*t81*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[3*ng+i] = nlg1*(odg5*udg8+t84*udg2+t24*t90*udg3+(t7*t11*t24*t81*udg2*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg5*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg8+t21*(t25*udg2*(t47-udg6)+t25*udg3*(t48-udg7))-t35*t39*udg5)))+nlg2*(odg5*udg12+t84*udg3+t24*t90*udg2-(t7*t11*t24*t81*udg3*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg9*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg12+t21*(t25*udg2*(t49-udg10)+t25*udg3*(t50-udg11))-t35*t39*udg9)))+tau1*(udg4-uhg4);
	});
}

void KokkosFbou3(dstype* f, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Fbou3", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype param4 = param[3];
		dstype param10 = param[9];
		dstype tau1 = tau[0];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		dstype uhg2 = uhg[1*ng+i];
		dstype uhg3 = uhg[2*ng+i];
		dstype uhg4 = uhg[3*ng+i];
		dstype odg5 = odg[4*ng+i];
		dstype nlg1 = nlg[0*ng+i];
		dstype nlg2 = nlg[1*ng+i];
		dstype t2 = param4*param4;
		dstype t3 = udg2*udg2;
		dstype t4 = udg3*udg3;
		dstype t5 = 1.0/3.141592653589793;
		dstype t6 = param1-1.0;
		dstype t7 = 1.0/param2;
		dstype t8 = 1.0/param3;
		dstype t9 = udg1*1.0E+3;
		dstype t11 = param10+5.52E+2/5.0;
		dstype t12 = udg1-1.0/1.0E+2;
		dstype t10 = 1.0/t6;
		dstype t13 = t9-1.0E+1;
		dstype t14 = atan(t13);
		dstype t15 = t5*t14;
		dstype t16 = t15+1.0/2.0;
		dstype t17 = t12*t16;
		dstype t18 = t17*1.0E+3;
		dstype t19 = t17+3.183097800805168E-4;
		dstype t21 = t17+1.031830978008052E-2;
		dstype t20 = t19*t19;
		dstype t22 = t18+3.183097800805168E-1;
		dstype t24 = 1.0/t21;
		dstype t23 = atan(t22);
		dstype t25 = t24*t24;
		dstype t26 = t24*udg4;
		dstype t27 = t20*1.0E+6;
		dstype t28 = t24*udg2*udg3;
		dstype t29 = t27+1.0;
		dstype t30 = t5*t23;
		dstype t31 = (t3*t25)/2.0;
		dstype t32 = (t4*t25)/2.0;
		dstype t33 = 1.0/t29;
		dstype t35 = t31+t32;
		dstype t34 = t5*t22*t33;
		dstype t36 = t21*t35;
		dstype t39 = t30+t34+1.0/2.0;
		dstype t41 = t6*(t36-udg4)*-1.0E+3;
		dstype t42 = t41-1.0;
		dstype t47 = t24*t39*udg2*udg5;
		dstype t48 = t24*t39*udg3*udg5;
		dstype t49 = t24*t39*udg2*udg9;
		dstype t50 = t24*t39*udg3*udg9;
		dstype t43 = atan(t42);
		dstype t62 = -t24*(t50-udg11);
		dstype t64 = t24*(t50-udg11)*-2.0;
		dstype t45 = t5*t43;
		dstype t46 = t45+1.0/2.0;
		dstype t67 = -t46*(t6*(t36-udg4)+1.0/1.0E+3);
		dstype t68 = t46*(t6*(t36-udg4)+1.0/1.0E+3)*-1.0E+3;
		dstype t70 = pow(t46*(t6*(t36-udg4)+1.0/1.0E+3)-3.183097800805168E-4,2.0);
		dstype t78 = -t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3);
		dstype t83 = -1.0/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t71 = t67+1.318309780080517E-3;
		dstype t72 = t68+3.183097800805168E-1;
		dstype t74 = t70*1.0E+6;
		dstype t79 = param1*t2*t78;
		dstype t84 = t26+t78;
		dstype t73 = atan(t72);
		dstype t75 = t74+1.0;
		dstype t81 = pow(t79,3.0/2.0);
		dstype t76 = t5*t73;
		dstype t77 = 1.0/t75;
		dstype t90 = (t7*t11*t81*(t24*(t48-udg7)+t24*(t49-udg10)))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t88 = -t5*t77*(t46*(t6*(t36-udg4)+1.0/1.0E+3)*1.0E+3-3.183097800805168E-1);
		dstype t89 = t76+t88+1.0/2.0;
		f[0*ng+i] = 0.0;
		f[1*ng+i] = nlg2*(t28+t90+odg5*udg10)+tau1*(udg2-uhg2)+nlg1*(t71+odg5*udg6+t3*t24+(t7*t11*t81*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[2*ng+i] = nlg1*(t28+t90+odg5*udg7)+tau1*(udg3-uhg3)+nlg2*(t71+odg5*udg11+t4*t24-(t7*t11*t81*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[3*ng+i] = nlg1*(odg5*udg8+t84*udg2+t24*t90*udg3+(t7*t11*t24*t81*udg2*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg5*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg8+t21*(t25*udg2*(t47-udg6)+t25*udg3*(t48-udg7))-t35*t39*udg5)))+nlg2*(odg5*udg12+t84*udg3+t24*t90*udg2-(t7*t11*t24*t81*udg3*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg9*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg12+t21*(t25*udg2*(t49-udg10)+t25*udg3*(t50-udg11))-t35*t39*udg9)))+tau1*(udg4-uhg4);
	});
}

void KokkosFbou4(dstype* f, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Fbou4", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype param4 = param[3];
		dstype param10 = param[9];
		dstype tau1 = tau[0];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		dstype uhg1 = uhg[0*ng+i];
		dstype uhg2 = uhg[1*ng+i];
		dstype uhg3 = uhg[2*ng+i];
		dstype uhg4 = uhg[3*ng+i];
		dstype odg5 = odg[4*ng+i];
		dstype nlg1 = nlg[0*ng+i];
		dstype nlg2 = nlg[1*ng+i];
		dstype t2 = param4*param4;
		dstype t3 = udg2*udg2;
		dstype t4 = udg3*udg3;
		dstype t5 = 1.0/3.141592653589793;
		dstype t6 = param1-1.0;
		dstype t7 = 1.0/param2;
		dstype t8 = 1.0/param3;
		dstype t9 = udg1*1.0E+3;
		dstype t11 = param10+5.52E+2/5.0;
		dstype t12 = udg1-1.0/1.0E+2;
		dstype t10 = 1.0/t6;
		dstype t13 = t9-1.0E+1;
		dstype t14 = atan(t13);
		dstype t15 = t5*t14;
		dstype t16 = t15+1.0/2.0;
		dstype t17 = t12*t16;
		dstype t18 = t17*1.0E+3;
		dstype t19 = t17+3.183097800805168E-4;
		dstype t21 = t17+1.031830978008052E-2;
		dstype t20 = t19*t19;
		dstype t22 = t18+3.183097800805168E-1;
		dstype t24 = 1.0/t21;
		dstype t23 = atan(t22);
		dstype t25 = t24*t24;
		dstype t26 = t24*udg4;
		dstype t27 = t20*1.0E+6;
		dstype t28 = t24*udg2*udg3;
		dstype t29 = t27+1.0;
		dstype t30 = t5*t23;
		dstype t31 = (t3*t25)/2.0;
		dstype t32 = (t4*t25)/2.0;
		dstype t33 = 1.0/t29;
		dstype t35 = t31+t32;
		dstype t34 = t5*t22*t33;
		dstype t36 = t21*t35;
		dstype t39 = t30+t34+1.0/2.0;
		dstype t41 = t6*(t36-udg4)*-1.0E+3;
		dstype t42 = t41-1.0;
		dstype t47 = t24*t39*udg2*udg5;
		dstype t48 = t24*t39*udg3*udg5;
		dstype t49 = t24*t39*udg2*udg9;
		dstype t50 = t24*t39*udg3*udg9;
		dstype t43 = atan(t42);
		dstype t62 = -t24*(t50-udg11);
		dstype t64 = t24*(t50-udg11)*-2.0;
		dstype t45 = t5*t43;
		dstype t46 = t45+1.0/2.0;
		dstype t67 = -t46*(t6*(t36-udg4)+1.0/1.0E+3);
		dstype t68 = t46*(t6*(t36-udg4)+1.0/1.0E+3)*-1.0E+3;
		dstype t70 = pow(t46*(t6*(t36-udg4)+1.0/1.0E+3)-3.183097800805168E-4,2.0);
		dstype t78 = -t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3);
		dstype t83 = -1.0/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t71 = t67+1.318309780080517E-3;
		dstype t72 = t68+3.183097800805168E-1;
		dstype t74 = t70*1.0E+6;
		dstype t79 = param1*t2*t78;
		dstype t84 = t26+t78;
		dstype t73 = atan(t72);
		dstype t75 = t74+1.0;
		dstype t81 = pow(t79,3.0/2.0);
		dstype t76 = t5*t73;
		dstype t77 = 1.0/t75;
		dstype t90 = (t7*t11*t81*(t24*(t48-udg7)+t24*(t49-udg10)))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0);
		dstype t88 = -t5*t77*(t46*(t6*(t36-udg4)+1.0/1.0E+3)*1.0E+3-3.183097800805168E-1);
		dstype t89 = t76+t88+1.0/2.0;
		f[0*ng+i] = nlg1*(udg2+odg5*t39*udg5)+nlg2*(udg3+odg5*t39*udg9)+tau1*(udg1-uhg1);
		f[1*ng+i] = nlg2*(t28+t90+odg5*udg10)+tau1*(udg2-uhg2)+nlg1*(t71+odg5*udg6+t3*t24+(t7*t11*t81*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[2*ng+i] = nlg1*(t28+t90+odg5*udg7)+tau1*(udg3-uhg3)+nlg2*(t71+odg5*udg11+t4*t24-(t7*t11*t81*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0));
		f[3*ng+i] = nlg1*(odg5*udg8+t84*udg2+t24*t90*udg3+(t7*t11*t24*t81*udg2*(t62+t24*(t47-udg6)*2.0)*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg5*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg8+t21*(t25*udg2*(t47-udg6)+t25*udg3*(t48-udg7))-t35*t39*udg5)))+nlg2*(odg5*udg12+t84*udg3+t24*t90*udg2-(t7*t11*t24*t81*udg3*(t64+t24*(t47-udg6))*(2.0/3.0))/(param1*param10*t2*t24*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)-5.52E+2/5.0)+param1*t7*t8*t10*t11*t25*t81*t83*(t39*udg9*(t46*(t6*(t36-udg4)+1.0/1.0E+3)-1.318309780080517E-3)+t6*t21*t89*(udg12+t21*(t25*udg2*(t49-udg10)+t25*udg3*(t50-udg11))-t35*t39*udg9)))+tau1*(udg4-uhg4);
	});
}

void KokkosFbou(dstype* f, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ib, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	if (ib == 1)
		KokkosFbou1(f, xdg, udg, odg, wdg, uhg, nlg, tau, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
	else if (ib == 2)
		KokkosFbou2(f, xdg, udg, odg, wdg, uhg, nlg, tau, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
	else if (ib == 3)
		KokkosFbou3(f, xdg, udg, odg, wdg, uhg, nlg, tau, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
	else if (ib == 4)
		KokkosFbou4(f, xdg, udg, odg, wdg, uhg, nlg, tau, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
}

