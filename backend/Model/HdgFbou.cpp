void HdgFbou1(dstype* f, dstype* f_udg, dstype* f_wdg, dstype* f_uhg, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Fbou1", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype tau1 = tau[0];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		dstype udg13 = udg[12*ng+i];
		dstype udg14 = udg[13*ng+i];
		dstype udg15 = udg[14*ng+i];
		dstype udg16 = udg[15*ng+i];
		dstype udg17 = udg[16*ng+i];
		dstype udg18 = udg[17*ng+i];
		dstype udg19 = udg[18*ng+i];
		dstype udg20 = udg[19*ng+i];
		dstype uhg1 = uhg[0*ng+i];
		dstype uhg2 = uhg[1*ng+i];
		dstype uhg3 = uhg[2*ng+i];
		dstype uhg4 = uhg[3*ng+i];
		dstype uhg5 = uhg[4*ng+i];
		dstype nlg1 = nlg[0*ng+i];
		dstype nlg2 = nlg[1*ng+i];
		dstype nlg3 = nlg[2*ng+i];
		{
		dstype t2 = udg2*udg2;
		dstype t3 = udg3*udg3;
		dstype t4 = udg4*udg4;
		dstype t5 = param1-1.0;
		dstype t6 = 1.0/param2;
		dstype t7 = 1.0/param3;
		dstype t8 = 1.0/udg1;
		dstype t9 = t8*t8;
		dstype t10 = t8*udg5;
		dstype t11 = t8*udg2*udg3;
		dstype t12 = t8*udg2*udg4;
		dstype t13 = t8*udg3*udg4;
		dstype t14 = t8*udg2*udg6;
		dstype t15 = t8*udg3*udg6;
		dstype t16 = t8*udg4*udg6;
		dstype t17 = t8*udg2*udg11;
		dstype t18 = t8*udg3*udg11;
		dstype t19 = t8*udg4*udg11;
		dstype t20 = t8*udg2*udg16;
		dstype t21 = t8*udg3*udg16;
		dstype t22 = t8*udg4*udg16;
		dstype t23 = 1.0/t5;
		dstype t33 = (t2*t9)/2.0;
		dstype t34 = (t3*t9)/2.0;
		dstype t35 = (t4*t9)/2.0;
		dstype t54 = t8*(t14-udg7)*-2.0;
		dstype t55 = t8*(t18-udg13)*-2.0;
		dstype t56 = t8*(t22-udg19)*-2.0;
		dstype t66 = -t6*(t8*(t15-udg8)+t8*(t17-udg12));
		dstype t67 = -t6*(t8*(t16-udg9)+t8*(t20-udg17));
		dstype t68 = -t6*(t8*(t19-udg14)+t8*(t21-udg18));
		dstype t63 = t33+t34+t35;
		dstype t71 = t11+t66;
		dstype t72 = t12+t67;
		dstype t73 = t13+t68;
		dstype t64 = t63*udg1;
		dstype t70 = -t5*(t64-udg5);
		dstype t74 = t8*t70;
		dstype t78 = t10+t74;
		f[0*ng+i] = nlg1*udg2+nlg2*udg3+nlg3*udg4+tau1*(udg1-uhg1);
		f[1*ng+i] = nlg2*t71+nlg3*t72+tau1*(udg2-uhg2)+nlg1*(t70+t2*t8+t6*(t54+t8*(t18-udg13)+t8*(t22-udg19))*(2.0/3.0));
		f[2*ng+i] = nlg1*t71+nlg3*t73+tau1*(udg3-uhg3)+nlg2*(t70+t3*t8+t6*(t55+t8*(t14-udg7)+t8*(t22-udg19))*(2.0/3.0));
		f[3*ng+i] = nlg1*t72+nlg2*t73+tau1*(udg4-uhg4)+nlg3*(t70+t4*t8+t6*(t56+t8*(t14-udg7)+t8*(t18-udg13))*(2.0/3.0));
		f[4*ng+i] = tau1*(udg5-uhg5)+nlg1*(t78*udg2+t8*t66*udg3+t8*t67*udg4+t6*t8*udg2*(t54+t8*(t18-udg13)+t8*(t22-udg19))*(2.0/3.0)+param1*t6*t7*t9*t23*(t5*udg1*(udg10+udg1*(t9*udg2*(t14-udg7)+t9*udg3*(t15-udg8)+t9*udg4*(t16-udg9))-t63*udg6)+t5*udg6*(t64-udg5)))+nlg2*(t78*udg3+t8*t66*udg2+t8*t68*udg4+t6*t8*udg3*(t55+t8*(t14-udg7)+t8*(t22-udg19))*(2.0/3.0)+param1*t6*t7*t9*t23*(t5*udg1*(udg15+udg1*(t9*udg2*(t17-udg12)+t9*udg3*(t18-udg13)+t9*udg4*(t19-udg14))-t63*udg11)+t5*udg11*(t64-udg5)))+nlg3*(t78*udg4+t8*t67*udg2+t8*t68*udg3+t6*t8*udg4*(t56+t8*(t14-udg7)+t8*(t18-udg13))*(2.0/3.0)+param1*t6*t7*t9*t23*(t5*udg1*(udg20+udg1*(t9*udg2*(t20-udg17)+t9*udg3*(t21-udg18)+t9*udg4*(t22-udg19))-t63*udg16)+t5*udg16*(t64-udg5)));
		}
		{
		dstype t2 = udg2*udg2;
		dstype t3 = udg3*udg3;
		dstype t4 = udg4*udg4;
		dstype t5 = param1-1.0;
		dstype t6 = 1.0/param2;
		dstype t7 = 1.0/param3;
		dstype t8 = -udg10;
		dstype t9 = -udg15;
		dstype t10 = -udg20;
		dstype t11 = 1.0/udg1;
		dstype t12 = t11*t11;
		dstype t13 = t11*t11*t11;
		dstype t15 = t11*udg2;
		dstype t16 = t11*udg3;
		dstype t17 = t11*udg4;
		dstype t18 = t11*udg5;
		dstype t41 = 1.0/t5;
		dstype t49 = t5*t11;
		dstype t69 = nlg1*t6*t11;
		dstype t70 = nlg2*t6*t11;
		dstype t71 = nlg3*t6*t11;
		dstype t14 = t12*t12;
		dstype t19 = t12*udg5;
		dstype t20 = t12*udg2*udg3;
		dstype t21 = t12*udg2*udg4;
		dstype t22 = t15*udg6;
		dstype t23 = t12*udg3*udg4;
		dstype t24 = t16*udg6;
		dstype t25 = t17*udg6;
		dstype t26 = t13*udg2*udg6;
		dstype t27 = t13*udg3*udg6;
		dstype t28 = t13*udg4*udg6;
		dstype t29 = t15*udg11;
		dstype t30 = t16*udg11;
		dstype t31 = t17*udg11;
		dstype t32 = t13*udg2*udg11;
		dstype t33 = t13*udg3*udg11;
		dstype t34 = t13*udg4*udg11;
		dstype t35 = t15*udg16;
		dstype t36 = t16*udg16;
		dstype t37 = t17*udg16;
		dstype t38 = t13*udg2*udg16;
		dstype t39 = t13*udg3*udg16;
		dstype t40 = t13*udg4*udg16;
		dstype t42 = t2*t13;
		dstype t43 = t3*t13;
		dstype t44 = t4*t13;
		dstype t72 = t5*t15;
		dstype t73 = t5*t16;
		dstype t74 = t5*t17;
		dstype t75 = t6*t12*udg2;
		dstype t76 = t6*t12*udg3;
		dstype t77 = t6*t12*udg4;
		dstype t78 = t6*t12*udg6;
		dstype t79 = t6*t12*udg11;
		dstype t80 = t6*t12*udg16;
		dstype t81 = (t2*t12)/2.0;
		dstype t82 = (t3*t12)/2.0;
		dstype t83 = (t4*t12)/2.0;
		dstype t114 = t69*(2.0/3.0);
		dstype t115 = t70*(2.0/3.0);
		dstype t116 = t71*(2.0/3.0);
		dstype t123 = t11+t49;
		dstype t45 = t26*2.0;
		dstype t46 = t33*2.0;
		dstype t47 = t40*2.0;
		dstype t53 = -t26;
		dstype t61 = -t33;
		dstype t68 = -t40;
		dstype t84 = nlg1*t75;
		dstype t85 = nlg1*t76;
		dstype t86 = nlg2*t75;
		dstype t87 = nlg1*t77;
		dstype t88 = nlg2*t76;
		dstype t89 = nlg3*t75;
		dstype t90 = nlg2*t77;
		dstype t91 = nlg3*t76;
		dstype t92 = nlg3*t77;
		dstype t93 = t5*t20;
		dstype t94 = t5*t21;
		dstype t95 = t5*t23;
		dstype t96 = t6*t26;
		dstype t97 = t6*t33;
		dstype t98 = t6*t40;
		dstype t108 = -t78;
		dstype t109 = -t79;
		dstype t110 = -t80;
		dstype t111 = t6*t42;
		dstype t112 = t6*t43;
		dstype t113 = t6*t44;
		dstype t117 = t78*(2.0/3.0);
		dstype t118 = t79*(2.0/3.0);
		dstype t119 = t80*(2.0/3.0);
		dstype t124 = -t114;
		dstype t125 = -t115;
		dstype t126 = -t116;
		dstype t133 = param1*t7*t75;
		dstype t134 = param1*t7*t76;
		dstype t135 = param1*t7*t77;
		dstype t157 = t11*(t22-udg7)*-2.0;
		dstype t158 = t12*(t22-udg7)*-2.0;
		dstype t159 = t11*(t30-udg13)*-2.0;
		dstype t160 = t12*(t30-udg13)*-2.0;
		dstype t161 = t11*(t37-udg19)*-2.0;
		dstype t162 = t12*(t37-udg19)*-2.0;
		dstype t177 = t12*(t30-udg13);
		dstype t180 = t12*(t37-udg19);
		dstype t191 = t42+t43+t44;
		dstype t200 = t81+t82+t83;
		dstype t210 = t6*t11*(t11*(t24-udg8)+t11*(t29-udg12));
		dstype t211 = t6*t11*(t11*(t25-udg9)+t11*(t35-udg17));
		dstype t212 = t6*t11*(t11*(t31-udg14)+t11*(t36-udg18));
		dstype t226 = -udg1*(t12*udg2*(t22-udg7)+t12*udg3*(t24-udg8)+t12*udg4*(t25-udg9));
		dstype t229 = -t6*(t27+t32+t12*(t24-udg8)+t12*(t29-udg12));
		dstype t230 = -t6*(t28+t38+t12*(t25-udg9)+t12*(t35-udg17));
		dstype t231 = -t6*(t34+t39+t12*(t31-udg14)+t12*(t36-udg18));
		dstype t54 = -t45;
		dstype t120 = -t84;
		dstype t121 = -t88;
		dstype t122 = -t92;
		dstype t127 = -t117;
		dstype t128 = -t118;
		dstype t129 = -t119;
		dstype t130 = t84*(2.0/3.0);
		dstype t131 = t88*(2.0/3.0);
		dstype t132 = t92*(2.0/3.0);
		dstype t172 = -t133;
		dstype t173 = -t134;
		dstype t174 = -t135;
		dstype t182 = t15+t108;
		dstype t183 = t16+t109;
		dstype t184 = t17+t110;
		dstype t192 = t191*udg1;
		dstype t201 = t200*udg1;
		dstype t202 = t200*udg6;
		dstype t203 = t200*udg11;
		dstype t204 = t200*udg16;
		dstype t227 = -udg1*(t177*udg3+t12*udg2*(t29-udg12)+t12*udg4*(t31-udg14));
		dstype t228 = -udg1*(t180*udg4+t12*udg2*(t35-udg17)+t12*udg3*(t36-udg18));
		dstype t233 = t20+t229;
		dstype t234 = t21+t230;
		dstype t235 = t23+t231;
		dstype t136 = -t130;
		dstype t137 = -t131;
		dstype t138 = -t132;
		dstype t185 = nlg1*t182;
		dstype t186 = nlg2*t183;
		dstype t187 = nlg3*t184;
		dstype t188 = t72+t127;
		dstype t189 = t73+t128;
		dstype t190 = t74+t129;
		dstype t193 = t75+t172;
		dstype t194 = t76+t173;
		dstype t195 = t77+t174;
		dstype t196 = -t192;
		dstype t213 = -t5*(t201-udg5);
		dstype t214 = -t49*(t201-udg5);
		dstype t241 = t33+t40+t54+t158+t177+t180;
		dstype t242 = t8+t202+t226;
		dstype t243 = t9+t203+t227;
		dstype t244 = t10+t204+t228;
		dstype t215 = t12*t213;
		dstype t232 = t196+t200;
		dstype t236 = t5*t232;
		dstype t238 = t49*t232;
		dstype t237 = t236*udg1;
		dstype t246 = t19+t215+t238;
		dstype t247 = param1*t6*t7*t12*t41*(t237-t5*(t201-udg5));
		f_udg[0*ng+i] = tau1;
		f_udg[1*ng+i] = -nlg1*(t236+t2*t12+t6*t241*(2.0/3.0))-nlg2*t233-nlg3*t234;
		f_udg[2*ng+i] = -nlg2*(t236+t3*t12+t6*(t26+t40-t46+t160+t180+t12*(t22-udg7))*(2.0/3.0))-nlg1*t233-nlg3*t235;
		f_udg[3*ng+i] = -nlg3*(t236+t4*t12+t6*(t26+t33-t47+t162+t177+t12*(t22-udg7))*(2.0/3.0))-nlg1*t234-nlg2*t235;
		f_udg[4*ng+i] = nlg2*(t75*(t11*(t24-udg8)+t11*(t29-udg12))+t77*(t11*(t31-udg14)+t11*(t36-udg18))-t246*udg3-t76*(t159+t11*(t22-udg7)+t11*(t37-udg19))*(2.0/3.0)+t6*t15*(t27+t32+t12*(t24-udg8)+t12*(t29-udg12))+t6*t17*(t34+t39+t12*(t31-udg14)+t12*(t36-udg18))-t6*t16*(t26+t40-t46+t160+t180+t12*(t22-udg7))*(2.0/3.0)+param1*t6*t7*t13*t41*(t213*udg11+t5*t243*udg1)*2.0+param1*t6*t7*t12*t41*(-t5*t243+t236*udg11+t5*udg1*(-udg1*(t2*t14*udg11+t3*t14*udg11+t4*t14*udg11+t13*udg2*(t29-udg12)*2.0+t13*udg3*(t30-udg13)*2.0+t13*udg4*(t31-udg14)*2.0)+t177*udg3+t191*udg11+t12*udg2*(t29-udg12)+t12*udg4*(t31-udg14))))+nlg3*(t75*(t11*(t25-udg9)+t11*(t35-udg17))+t76*(t11*(t31-udg14)+t11*(t36-udg18))-t246*udg4-t77*(t161+t11*(t22-udg7)+t11*(t30-udg13))*(2.0/3.0)+t6*t15*(t28+t38+t12*(t25-udg9)+t12*(t35-udg17))+t6*t16*(t34+t39+t12*(t31-udg14)+t12*(t36-udg18))-t6*t17*(t26+t33-t47+t162+t177+t12*(t22-udg7))*(2.0/3.0)+param1*t6*t7*t13*t41*(t213*udg16+t5*t244*udg1)*2.0+param1*t6*t7*t12*t41*(-t5*t244+t236*udg16+t5*udg1*(-udg1*(t2*t14*udg16+t3*t14*udg16+t4*t14*udg16+t13*udg2*(t35-udg17)*2.0+t13*udg3*(t36-udg18)*2.0+t13*udg4*(t37-udg19)*2.0)+t180*udg4+t191*udg16+t12*udg2*(t35-udg17)+t12*udg3*(t36-udg18))))+nlg1*(t76*(t11*(t24-udg8)+t11*(t29-udg12))+t77*(t11*(t25-udg9)+t11*(t35-udg17))-t246*udg2-t75*(t157+t11*(t30-udg13)+t11*(t37-udg19))*(2.0/3.0)+t6*t16*(t27+t32+t12*(t24-udg8)+t12*(t29-udg12))+t6*t17*(t28+t38+t12*(t25-udg9)+t12*(t35-udg17))-t6*t15*t241*(2.0/3.0)+param1*t6*t7*t13*t41*(t213*udg6+t5*t242*udg1)*2.0+param1*t6*t7*t12*t41*(-t5*t242+t236*udg6+t5*udg1*(-udg1*(t2*t14*udg6+t3*t14*udg6+t4*t14*udg6+t13*udg2*(t22-udg7)*2.0+t13*udg3*(t24-udg8)*2.0+t13*udg4*(t25-udg9)*2.0)+t191*udg6+t12*udg2*(t22-udg7)+t12*udg3*(t24-udg8)+t12*udg4*(t25-udg9))));
		f_udg[5*ng+i] = nlg1;
		f_udg[6*ng+i] = t186+t187+tau1-nlg1*(t15*-2.0+t72+t78*(4.0/3.0));
		f_udg[7*ng+i] = nlg1*t183-nlg2*t188;
		f_udg[8*ng+i] = nlg1*t184-nlg3*t188;
		f_udg[9*ng+i] = nlg1*(t18-t96*(4.0/3.0)+t214+t6*t61+t6*t68+t6*t11*(t157+t11*(t30-udg13)+t11*(t37-udg19))*(2.0/3.0)-t2*t5*t12+param1*t6*t7*t12*t41*(t5*t22+t5*udg1*(udg1*(t26+t12*(t22-udg7))-t12*udg2*udg6)))-nlg2*(t93+t210-t6*t27*(2.0/3.0)+t6*t32-param1*t6*t7*t12*t41*(t5*t29+t5*udg1*(udg1*(t32+t12*(t29-udg12))-t12*udg2*udg11)))-nlg3*(t94+t211-t6*t28*(2.0/3.0)+t6*t38-param1*t6*t7*t12*t41*(t5*t35+t5*udg1*(udg1*(t38+t12*(t35-udg17))-t12*udg2*udg16)));
		f_udg[10*ng+i] = nlg2;
		f_udg[11*ng+i] = nlg2*t182-nlg1*t189;
		f_udg[12*ng+i] = t185+t187+tau1-nlg2*(t16*-2.0+t73+t79*(4.0/3.0));
		f_udg[13*ng+i] = nlg2*t184-nlg3*t189;
		f_udg[14*ng+i] = nlg2*(t18-t97*(4.0/3.0)+t214+t6*t53+t6*t68+t6*t11*(t159+t11*(t22-udg7)+t11*(t37-udg19))*(2.0/3.0)-t3*t5*t12+param1*t6*t7*t12*t41*(t5*t30+t5*udg1*(udg1*(t33+t177)-t12*udg3*udg11)))-nlg1*(t93+t210+t6*t27-t6*t32*(2.0/3.0)-param1*t6*t7*t12*t41*(t5*t24+t5*udg1*(udg1*(t27+t12*(t24-udg8))-t12*udg3*udg6)))-nlg3*(t95+t212-t6*t34*(2.0/3.0)+t6*t39-param1*t6*t7*t12*t41*(t5*t36+t5*udg1*(udg1*(t39+t12*(t36-udg18))-t12*udg3*udg16)));
		f_udg[15*ng+i] = nlg3;
		f_udg[16*ng+i] = nlg3*t182-nlg1*t190;
		f_udg[17*ng+i] = nlg3*t183-nlg2*t190;
		f_udg[18*ng+i] = t185+t186+tau1-nlg3*(t17*-2.0+t74+t80*(4.0/3.0));
		f_udg[19*ng+i] = nlg3*(t18-t98*(4.0/3.0)+t214+t6*t53+t6*t61+t6*t11*(t161+t11*(t22-udg7)+t11*(t30-udg13))*(2.0/3.0)-t4*t5*t12+param1*t6*t7*t12*t41*(t5*t37+t5*udg1*(udg1*(t40+t180)-t12*udg4*udg16)))-nlg1*(t94+t211+t6*t28-t6*t38*(2.0/3.0)-param1*t6*t7*t12*t41*(t5*t25+t5*udg1*(udg1*(t28+t12*(t25-udg9))-t12*udg4*udg6)))-nlg2*(t95+t212+t6*t34-t6*t39*(2.0/3.0)-param1*t6*t7*t12*t41*(t5*t31+t5*udg1*(udg1*(t34+t12*(t31-udg14))-t12*udg4*udg11)));
		f_udg[20*ng+i] = 0.0;
		f_udg[21*ng+i] = nlg1*t5;
		f_udg[22*ng+i] = nlg2*t5;
		f_udg[23*ng+i] = nlg3*t5;
		f_udg[24*ng+i] = tau1+nlg1*(t123*udg2+param1*t7*t108)+nlg2*(t123*udg3+param1*t7*t109)+nlg3*(t123*udg4+param1*t7*t110);
		f_udg[25*ng+i] = 0.0;
		f_udg[26*ng+i] = t84*(-4.0/3.0)+t121+t122;
		f_udg[27*ng+i] = -t85+t86*(2.0/3.0);
		f_udg[28*ng+i] = -t87+t89*(2.0/3.0);
		f_udg[29*ng+i] = -nlg1*(t111*(4.0/3.0)+t112+t113+t247)-(nlg2*t6*t13*udg2*udg3)/3.0-(nlg3*t6*t13*udg2*udg4)/3.0;
		f_udg[30*ng+i] = 0.0;
		f_udg[31*ng+i] = t69*(4.0/3.0);
		f_udg[32*ng+i] = t125;
		f_udg[33*ng+i] = t126;
		f_udg[34*ng+i] = t137+t138+nlg1*(t75*(4.0/3.0)+t172);
		f_udg[35*ng+i] = 0.0;
		f_udg[36*ng+i] = t70;
		f_udg[37*ng+i] = t69;
		f_udg[38*ng+i] = 0.0;
		f_udg[39*ng+i] = t86+nlg1*t194;
		f_udg[40*ng+i] = 0.0;
		f_udg[41*ng+i] = t71;
		f_udg[42*ng+i] = 0.0;
		f_udg[43*ng+i] = t69;
		f_udg[44*ng+i] = t89+nlg1*t195;
		f_udg[45*ng+i] = 0.0;
		f_udg[46*ng+i] = 0.0;
		f_udg[47*ng+i] = 0.0;
		f_udg[48*ng+i] = 0.0;
		f_udg[49*ng+i] = param1*t7*t69;
		f_udg[50*ng+i] = 0.0;
		f_udg[51*ng+i] = t85*(2.0/3.0)-t86;
		f_udg[52*ng+i] = t88*(-4.0/3.0)+t120+t122;
		f_udg[53*ng+i] = -t90+t91*(2.0/3.0);
		f_udg[54*ng+i] = -nlg2*(t111+t112*(4.0/3.0)+t113+t247)-(nlg1*t6*t13*udg2*udg3)/3.0-(nlg3*t6*t13*udg3*udg4)/3.0;
		f_udg[55*ng+i] = 0.0;
		f_udg[56*ng+i] = t70;
		f_udg[57*ng+i] = t69;
		f_udg[58*ng+i] = 0.0;
		f_udg[59*ng+i] = t85+nlg2*t193;
		f_udg[60*ng+i] = 0.0;
		f_udg[61*ng+i] = t124;
		f_udg[62*ng+i] = t70*(4.0/3.0);
		f_udg[63*ng+i] = t126;
		f_udg[64*ng+i] = t136+t138+nlg2*(t76*(4.0/3.0)+t173);
		f_udg[65*ng+i] = 0.0;
		f_udg[66*ng+i] = 0.0;
		f_udg[67*ng+i] = t71;
		f_udg[68*ng+i] = t70;
		f_udg[69*ng+i] = t91+nlg2*t195;
		f_udg[70*ng+i] = 0.0;
		f_udg[71*ng+i] = 0.0;
		f_udg[72*ng+i] = 0.0;
		f_udg[73*ng+i] = 0.0;
		f_udg[74*ng+i] = param1*t7*t70;
		f_udg[75*ng+i] = 0.0;
		f_udg[76*ng+i] = t87*(2.0/3.0)-t89;
		f_udg[77*ng+i] = t90*(2.0/3.0)-t91;
		f_udg[78*ng+i] = t92*(-4.0/3.0)+t120+t121;
		f_udg[79*ng+i] = -nlg3*(t111+t112+t113*(4.0/3.0)+t247)-(nlg1*t6*t13*udg2*udg4)/3.0-(nlg2*t6*t13*udg3*udg4)/3.0;
		f_udg[80*ng+i] = 0.0;
		f_udg[81*ng+i] = t71;
		f_udg[82*ng+i] = 0.0;
		f_udg[83*ng+i] = t69;
		f_udg[84*ng+i] = t87+nlg3*t193;
		f_udg[85*ng+i] = 0.0;
		f_udg[86*ng+i] = 0.0;
		f_udg[87*ng+i] = t71;
		f_udg[88*ng+i] = t70;
		f_udg[89*ng+i] = t90+nlg3*t194;
		f_udg[90*ng+i] = 0.0;
		f_udg[91*ng+i] = t124;
		f_udg[92*ng+i] = t125;
		f_udg[93*ng+i] = t71*(4.0/3.0);
		f_udg[94*ng+i] = t136+t137+nlg3*(t77*(4.0/3.0)+t174);
		f_udg[95*ng+i] = 0.0;
		f_udg[96*ng+i] = 0.0;
		f_udg[97*ng+i] = 0.0;
		f_udg[98*ng+i] = 0.0;
		f_udg[99*ng+i] = param1*t7*t71;
		}
		{
		dstype t2 = -tau1;
		f_uhg[0*ng+i] = t2;
		f_uhg[1*ng+i] = 0.0;
		f_uhg[2*ng+i] = 0.0;
		f_uhg[3*ng+i] = 0.0;
		f_uhg[4*ng+i] = 0.0;
		f_uhg[5*ng+i] = 0.0;
		f_uhg[6*ng+i] = t2;
		f_uhg[7*ng+i] = 0.0;
		f_uhg[8*ng+i] = 0.0;
		f_uhg[9*ng+i] = 0.0;
		f_uhg[10*ng+i] = 0.0;
		f_uhg[11*ng+i] = 0.0;
		f_uhg[12*ng+i] = t2;
		f_uhg[13*ng+i] = 0.0;
		f_uhg[14*ng+i] = 0.0;
		f_uhg[15*ng+i] = 0.0;
		f_uhg[16*ng+i] = 0.0;
		f_uhg[17*ng+i] = 0.0;
		f_uhg[18*ng+i] = t2;
		f_uhg[19*ng+i] = 0.0;
		f_uhg[20*ng+i] = 0.0;
		f_uhg[21*ng+i] = 0.0;
		f_uhg[22*ng+i] = 0.0;
		f_uhg[23*ng+i] = 0.0;
		f_uhg[24*ng+i] = t2;
		}
	});
}

void HdgFbou(dstype* f, dstype* f_udg, dstype* f_wdg, dstype* f_uhg, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uhg, const dstype* nlg, const dstype* tau, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ib, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	if (ib == 1)
		HdgFbou1(f, f_udg, f_wdg, f_uhg, xdg, udg, odg, wdg, uhg, nlg, tau, uinf, param, time, modelnumber, ng, nc, ncu, nd, ncx, nco, ncw);
}

