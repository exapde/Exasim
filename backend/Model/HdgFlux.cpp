void HdgFlux(dstype* f, dstype* f_udg, dstype* f_wdg, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Flux", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype udg1 = udg[0*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		{
		dstype t2 = udg4*udg8;
		dstype t3 = udg5*udg7;
		dstype t4 = udg4*udg9;
		dstype t5 = udg6*udg7;
		dstype t6 = udg5*udg9;
		dstype t7 = udg6*udg8;
		dstype t8 = udg4*udg11;
		dstype t9 = udg5*udg10;
		dstype t10 = udg4*udg12;
		dstype t11 = udg6*udg10;
		dstype t12 = udg5*udg12;
		dstype t13 = udg6*udg11;
		dstype t14 = udg7*udg11;
		dstype t15 = udg8*udg10;
		dstype t16 = udg7*udg12;
		dstype t17 = udg9*udg10;
		dstype t18 = udg8*udg12;
		dstype t19 = udg9*udg11;
		dstype t20 = t2*udg12;
		dstype t21 = t4*udg11;
		dstype t22 = t3*udg12;
		dstype t23 = t6*udg10;
		dstype t24 = t5*udg11;
		dstype t25 = t7*udg10;
		dstype t26 = -t3;
		dstype t27 = -t5;
		dstype t28 = -t7;
		dstype t29 = -t9;
		dstype t30 = -t11;
		dstype t31 = -t13;
		dstype t32 = -t15;
		dstype t33 = -t17;
		dstype t34 = -t19;
		dstype t35 = -t21;
		dstype t36 = -t22;
		dstype t37 = -t25;
		dstype t38 = t2+t26;
		dstype t39 = t4+t27;
		dstype t40 = t6+t28;
		dstype t41 = t8+t29;
		dstype t42 = t10+t30;
		dstype t43 = t12+t31;
		dstype t44 = t14+t32;
		dstype t45 = t16+t33;
		dstype t46 = t18+t34;
		dstype t47 = t20+t23+t24+t35+t36+t37;
		dstype t48 = t47+1.0;
		dstype t49 = 1.0/t47;
		f[0*ng+i] = param1*udg4-param1*t46*t49+param2*t46*t48;
		f[1*ng+i] = param1*udg5+param1*t45*t49-param2*t45*t48;
		f[2*ng+i] = param1*udg6-param1*t44*t49+param2*t44*t48;
		f[3*ng+i] = param1*udg7+param1*t43*t49-param2*t43*t48;
		f[4*ng+i] = param1*udg8-param1*t42*t49+param2*t42*t48;
		f[5*ng+i] = param1*udg9+param1*t41*t49-param2*t41*t48;
		f[6*ng+i] = param1*udg10-param1*t40*t49+param2*t40*t48;
		f[7*ng+i] = param1*udg11+param1*t39*t49-param2*t39*t48;
		f[8*ng+i] = param1*udg12-param1*t38*t49+param2*t38*t48;
		}
		{
		dstype t2 = udg4*udg8;
		dstype t3 = udg5*udg7;
		dstype t4 = udg4*udg9;
		dstype t5 = udg6*udg7;
		dstype t6 = udg5*udg9;
		dstype t7 = udg6*udg8;
		dstype t8 = udg4*udg11;
		dstype t9 = udg5*udg10;
		dstype t10 = udg4*udg12;
		dstype t11 = udg6*udg10;
		dstype t12 = udg5*udg12;
		dstype t13 = udg6*udg11;
		dstype t14 = udg7*udg11;
		dstype t15 = udg8*udg10;
		dstype t16 = udg7*udg12;
		dstype t17 = udg9*udg10;
		dstype t18 = udg8*udg12;
		dstype t19 = udg9*udg11;
		dstype t20 = t2*udg12;
		dstype t21 = t4*udg11;
		dstype t22 = t3*udg12;
		dstype t23 = t6*udg10;
		dstype t24 = t5*udg11;
		dstype t25 = t7*udg10;
		dstype t26 = -t3;
		dstype t27 = -t5;
		dstype t28 = -t7;
		dstype t29 = -t9;
		dstype t30 = -t11;
		dstype t31 = -t13;
		dstype t32 = -t15;
		dstype t33 = -t17;
		dstype t34 = -t19;
		dstype t35 = -t21;
		dstype t36 = -t22;
		dstype t37 = -t25;
		dstype t38 = t2+t26;
		dstype t39 = t4+t27;
		dstype t40 = t6+t28;
		dstype t41 = t8+t29;
		dstype t42 = t10+t30;
		dstype t43 = t12+t31;
		dstype t44 = t14+t32;
		dstype t45 = t16+t33;
		dstype t46 = t18+t34;
		dstype t47 = t38*t38;
		dstype t48 = t39*t39;
		dstype t49 = t40*t40;
		dstype t50 = t41*t41;
		dstype t51 = t42*t42;
		dstype t52 = t43*t43;
		dstype t53 = t44*t44;
		dstype t54 = t45*t45;
		dstype t55 = t46*t46;
		dstype t56 = param2*t38*t39;
		dstype t57 = param2*t38*t40;
		dstype t58 = param2*t38*t41;
		dstype t59 = param2*t39*t40;
		dstype t60 = param2*t38*t42;
		dstype t61 = param2*t39*t41;
		dstype t62 = param2*t38*t43;
		dstype t63 = param2*t39*t42;
		dstype t64 = param2*t40*t41;
		dstype t65 = param2*t38*t44;
		dstype t66 = param2*t39*t43;
		dstype t67 = param2*t40*t42;
		dstype t68 = param2*t38*t45;
		dstype t69 = param2*t39*t44;
		dstype t70 = param2*t40*t43;
		dstype t71 = param2*t41*t42;
		dstype t72 = param2*t38*t46;
		dstype t73 = param2*t39*t45;
		dstype t74 = param2*t40*t44;
		dstype t75 = param2*t41*t43;
		dstype t76 = param2*t39*t46;
		dstype t77 = param2*t40*t45;
		dstype t78 = param2*t41*t44;
		dstype t79 = param2*t42*t43;
		dstype t80 = param2*t40*t46;
		dstype t81 = param2*t41*t45;
		dstype t82 = param2*t42*t44;
		dstype t83 = param2*t41*t46;
		dstype t84 = param2*t42*t45;
		dstype t85 = param2*t43*t44;
		dstype t86 = param2*t42*t46;
		dstype t87 = param2*t43*t45;
		dstype t88 = param2*t43*t46;
		dstype t89 = param2*t44*t45;
		dstype t90 = param2*t44*t46;
		dstype t91 = param2*t45*t46;
		dstype t112 = t20+t23+t24+t35+t36+t37;
		dstype t92 = -t56;
		dstype t93 = -t58;
		dstype t94 = -t59;
		dstype t95 = -t62;
		dstype t96 = -t63;
		dstype t97 = -t64;
		dstype t98 = -t68;
		dstype t99 = -t69;
		dstype t100 = -t70;
		dstype t101 = -t71;
		dstype t102 = -t76;
		dstype t103 = -t77;
		dstype t104 = -t78;
		dstype t105 = -t79;
		dstype t106 = -t83;
		dstype t107 = -t84;
		dstype t108 = -t85;
		dstype t109 = -t88;
		dstype t110 = -t89;
		dstype t111 = -t91;
		dstype t113 = t112+1.0;
		dstype t114 = 1.0/t112;
		dstype t115 = t114*t114;
		dstype t116 = param2*t113*udg4;
		dstype t117 = param2*t113*udg5;
		dstype t118 = param2*t113*udg6;
		dstype t119 = param2*t113*udg7;
		dstype t120 = param2*t113*udg8;
		dstype t121 = param2*t113*udg9;
		dstype t122 = param2*t113*udg10;
		dstype t123 = param2*t113*udg11;
		dstype t124 = param2*t113*udg12;
		dstype t134 = param1*t114*udg4;
		dstype t135 = param1*t114*udg5;
		dstype t136 = param1*t114*udg6;
		dstype t137 = param1*t114*udg7;
		dstype t138 = param1*t114*udg8;
		dstype t139 = param1*t114*udg9;
		dstype t140 = param1*t114*udg10;
		dstype t141 = param1*t114*udg11;
		dstype t142 = param1*t114*udg12;
		dstype t125 = -t116;
		dstype t126 = -t117;
		dstype t127 = -t118;
		dstype t128 = -t119;
		dstype t129 = -t120;
		dstype t130 = -t121;
		dstype t131 = -t122;
		dstype t132 = -t123;
		dstype t133 = -t124;
		dstype t143 = -t134;
		dstype t144 = -t135;
		dstype t145 = -t136;
		dstype t146 = -t137;
		dstype t147 = -t138;
		dstype t148 = -t139;
		dstype t149 = -t140;
		dstype t150 = -t141;
		dstype t151 = -t142;
		dstype t152 = param1*t38*t39*t115;
		dstype t153 = param1*t38*t40*t115;
		dstype t154 = param1*t38*t41*t115;
		dstype t155 = param1*t39*t40*t115;
		dstype t156 = param1*t38*t42*t115;
		dstype t157 = param1*t39*t41*t115;
		dstype t158 = param1*t38*t43*t115;
		dstype t159 = param1*t39*t42*t115;
		dstype t160 = param1*t40*t41*t115;
		dstype t161 = param1*t38*t44*t115;
		dstype t162 = param1*t39*t43*t115;
		dstype t163 = param1*t40*t42*t115;
		dstype t164 = param1*t38*t45*t115;
		dstype t165 = param1*t39*t44*t115;
		dstype t166 = param1*t40*t43*t115;
		dstype t167 = param1*t41*t42*t115;
		dstype t168 = param1*t38*t46*t115;
		dstype t169 = param1*t39*t45*t115;
		dstype t170 = param1*t40*t44*t115;
		dstype t171 = param1*t41*t43*t115;
		dstype t172 = param1*t39*t46*t115;
		dstype t173 = param1*t40*t45*t115;
		dstype t174 = param1*t41*t44*t115;
		dstype t175 = param1*t42*t43*t115;
		dstype t176 = param1*t40*t46*t115;
		dstype t177 = param1*t41*t45*t115;
		dstype t178 = param1*t42*t44*t115;
		dstype t179 = param1*t41*t46*t115;
		dstype t180 = param1*t42*t45*t115;
		dstype t181 = param1*t43*t44*t115;
		dstype t182 = param1*t42*t46*t115;
		dstype t183 = param1*t43*t45*t115;
		dstype t184 = param1*t43*t46*t115;
		dstype t185 = param1*t44*t45*t115;
		dstype t186 = param1*t44*t46*t115;
		dstype t187 = param1*t45*t46*t115;
		dstype t188 = -t152;
		dstype t189 = -t154;
		dstype t190 = -t155;
		dstype t191 = -t158;
		dstype t192 = -t159;
		dstype t193 = -t160;
		dstype t194 = -t164;
		dstype t195 = -t165;
		dstype t196 = -t166;
		dstype t197 = -t167;
		dstype t198 = -t172;
		dstype t199 = -t173;
		dstype t200 = -t174;
		dstype t201 = -t175;
		dstype t202 = -t179;
		dstype t203 = -t180;
		dstype t204 = -t181;
		dstype t205 = -t184;
		dstype t206 = -t185;
		dstype t207 = -t187;
		dstype t208 = t57+t153;
		dstype t209 = t65+t161;
		dstype t210 = t73+t169;
		dstype t211 = t75+t171;
		dstype t212 = t80+t176;
		dstype t213 = t90+t186;
		dstype t226 = t60+t116+t143+t156;
		dstype t227 = t61+t125+t134+t157;
		dstype t228 = t66+t118+t145+t162;
		dstype t229 = t67+t127+t136+t163;
		dstype t230 = t72+t120+t147+t168;
		dstype t231 = t74+t129+t138+t170;
		dstype t232 = t81+t122+t149+t177;
		dstype t233 = t82+t131+t140+t178;
		dstype t234 = t86+t124+t151+t182;
		dstype t235 = t87+t133+t142+t183;
		dstype t214 = t92+t188;
		dstype t215 = t93+t189;
		dstype t216 = t94+t190;
		dstype t217 = t96+t192;
		dstype t218 = t100+t196;
		dstype t219 = t101+t197;
		dstype t220 = t104+t200;
		dstype t221 = t105+t201;
		dstype t222 = t107+t203;
		dstype t223 = t109+t205;
		dstype t224 = t110+t206;
		dstype t225 = t111+t207;
		dstype t236 = t97+t117+t144+t193;
		dstype t237 = t95+t126+t135+t191;
		dstype t238 = t99+t119+t146+t195;
		dstype t239 = t98+t128+t137+t194;
		dstype t240 = t103+t121+t148+t199;
		dstype t241 = t102+t130+t139+t198;
		dstype t242 = t108+t123+t150+t204;
		dstype t243 = t106+t132+t141+t202;
		f_udg[0*ng+i] = 0.0;
		f_udg[1*ng+i] = 0.0;
		f_udg[2*ng+i] = 0.0;
		f_udg[3*ng+i] = 0.0;
		f_udg[4*ng+i] = 0.0;
		f_udg[5*ng+i] = 0.0;
		f_udg[6*ng+i] = 0.0;
		f_udg[7*ng+i] = 0.0;
		f_udg[8*ng+i] = 0.0;
		f_udg[9*ng+i] = 0.0;
		f_udg[10*ng+i] = 0.0;
		f_udg[11*ng+i] = 0.0;
		f_udg[12*ng+i] = 0.0;
		f_udg[13*ng+i] = 0.0;
		f_udg[14*ng+i] = 0.0;
		f_udg[15*ng+i] = 0.0;
		f_udg[16*ng+i] = 0.0;
		f_udg[17*ng+i] = 0.0;
		f_udg[18*ng+i] = 0.0;
		f_udg[19*ng+i] = 0.0;
		f_udg[20*ng+i] = 0.0;
		f_udg[21*ng+i] = 0.0;
		f_udg[22*ng+i] = 0.0;
		f_udg[23*ng+i] = 0.0;
		f_udg[24*ng+i] = 0.0;
		f_udg[25*ng+i] = 0.0;
		f_udg[26*ng+i] = 0.0;
		f_udg[27*ng+i] = param1+param2*t55+param1*t55*t115;
		f_udg[28*ng+i] = t225;
		f_udg[29*ng+i] = t213;
		f_udg[30*ng+i] = t223;
		f_udg[31*ng+i] = t234;
		f_udg[32*ng+i] = t243;
		f_udg[33*ng+i] = t212;
		f_udg[34*ng+i] = t241;
		f_udg[35*ng+i] = t230;
		f_udg[36*ng+i] = t225;
		f_udg[37*ng+i] = param1+param2*t54+param1*t54*t115;
		f_udg[38*ng+i] = t224;
		f_udg[39*ng+i] = t235;
		f_udg[40*ng+i] = t222;
		f_udg[41*ng+i] = t232;
		f_udg[42*ng+i] = t240;
		f_udg[43*ng+i] = t210;
		f_udg[44*ng+i] = t239;
		f_udg[45*ng+i] = t213;
		f_udg[46*ng+i] = t224;
		f_udg[47*ng+i] = param1+param2*t53+param1*t53*t115;
		f_udg[48*ng+i] = t242;
		f_udg[49*ng+i] = t233;
		f_udg[50*ng+i] = t220;
		f_udg[51*ng+i] = t231;
		f_udg[52*ng+i] = t238;
		f_udg[53*ng+i] = t209;
		f_udg[54*ng+i] = t223;
		f_udg[55*ng+i] = t235;
		f_udg[56*ng+i] = t242;
		f_udg[57*ng+i] = param1+param2*t52+param1*t52*t115;
		f_udg[58*ng+i] = t221;
		f_udg[59*ng+i] = t211;
		f_udg[60*ng+i] = t218;
		f_udg[61*ng+i] = t228;
		f_udg[62*ng+i] = t237;
		f_udg[63*ng+i] = t234;
		f_udg[64*ng+i] = t222;
		f_udg[65*ng+i] = t233;
		f_udg[66*ng+i] = t221;
		f_udg[67*ng+i] = param1+param2*t51+param1*t51*t115;
		f_udg[68*ng+i] = t219;
		f_udg[69*ng+i] = t229;
		f_udg[70*ng+i] = t217;
		f_udg[71*ng+i] = t226;
		f_udg[72*ng+i] = t243;
		f_udg[73*ng+i] = t232;
		f_udg[74*ng+i] = t220;
		f_udg[75*ng+i] = t211;
		f_udg[76*ng+i] = t219;
		f_udg[77*ng+i] = param1+param2*t50+param1*t50*t115;
		f_udg[78*ng+i] = t236;
		f_udg[79*ng+i] = t227;
		f_udg[80*ng+i] = t215;
		f_udg[81*ng+i] = t212;
		f_udg[82*ng+i] = t240;
		f_udg[83*ng+i] = t231;
		f_udg[84*ng+i] = t218;
		f_udg[85*ng+i] = t229;
		f_udg[86*ng+i] = t236;
		f_udg[87*ng+i] = param1+param2*t49+param1*t49*t115;
		f_udg[88*ng+i] = t216;
		f_udg[89*ng+i] = t208;
		f_udg[90*ng+i] = t241;
		f_udg[91*ng+i] = t210;
		f_udg[92*ng+i] = t238;
		f_udg[93*ng+i] = t228;
		f_udg[94*ng+i] = t217;
		f_udg[95*ng+i] = t227;
		f_udg[96*ng+i] = t216;
		f_udg[97*ng+i] = param1+param2*t48+param1*t48*t115;
		f_udg[98*ng+i] = t214;
		f_udg[99*ng+i] = t230;
		f_udg[100*ng+i] = t239;
		f_udg[101*ng+i] = t209;
		f_udg[102*ng+i] = t237;
		f_udg[103*ng+i] = t226;
		f_udg[104*ng+i] = t215;
		f_udg[105*ng+i] = t208;
		f_udg[106*ng+i] = t214;
		f_udg[107*ng+i] = param1+param2*t47+param1*t47*t115;
		}
	});
}

