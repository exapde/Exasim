void HdgFlux(dstype* f, dstype* f_udg, dstype* f_wdg, const dstype* xdg, const dstype* udg, const dstype* odg, const dstype* wdg, const dstype* uinf, const dstype* param, const dstype time, const int modelnumber, const int ng, const int nc, const int ncu, const int nd, const int ncx, const int nco, const int ncw)
{
	Kokkos::parallel_for("Flux", ng, KOKKOS_LAMBDA(const size_t i) {
		dstype param1 = param[0];
		dstype param2 = param[1];
		dstype param3 = param[2];
		dstype udg1 = udg[0*ng+i];
		dstype udg2 = udg[1*ng+i];
		dstype udg3 = udg[2*ng+i];
		dstype udg4 = udg[3*ng+i];
		dstype udg5 = udg[4*ng+i];
		dstype udg6 = udg[5*ng+i];
		dstype udg7 = udg[6*ng+i];
		dstype udg8 = udg[7*ng+i];
		dstype udg9 = udg[8*ng+i];
		dstype udg10 = udg[9*ng+i];
		dstype udg11 = udg[10*ng+i];
		dstype udg12 = udg[11*ng+i];
		{
		dstype t2 = udg2*udg2;
		dstype t3 = udg3*udg3;
		dstype t4 = param1-1.0;
		dstype t5 = 1.0/param2;
		dstype t6 = 1.0/param3;
		dstype t7 = 1.0/udg1;
		dstype t8 = t7*t7;
		dstype t9 = t7*udg4;
		dstype t10 = t7*udg2*udg3;
		dstype t11 = t7*udg2*udg5;
		dstype t12 = t7*udg3*udg5;
		dstype t13 = t7*udg2*udg9;
		dstype t14 = t7*udg3*udg9;
		dstype t15 = 1.0/t4;
		dstype t20 = (t2*t8)/2.0;
		dstype t21 = (t3*t8)/2.0;
		dstype t29 = -t7*(t14-udg11);
		dstype t31 = t7*(t14-udg11)*-2.0;
		dstype t43 = -t5*(t7*(t12-udg7)+t7*(t13-udg10));
		dstype t34 = t20+t21;
		dstype t45 = t10+t43;
		dstype t35 = t34*udg1;
		dstype t39 = -t4*(t35-udg4);
		dstype t42 = t7*t39;
		dstype t44 = t9+t42;
		f[0*ng+i] = udg2;
		f[1*ng+i] = t39-t5*(t29+t7*(t11-udg6)*2.0)*(2.0/3.0)+t2*t7;
		f[2*ng+i] = t45;
		f[3*ng+i] = t44*udg2+t7*t43*udg3-t5*t7*udg2*(t29+t7*(t11-udg6)*2.0)*(2.0/3.0)+param1*t5*t6*t8*t15*(t4*udg1*(udg8+udg1*(t8*udg2*(t11-udg6)+t8*udg3*(t12-udg7))-t34*udg5)+t4*udg5*(t35-udg4));
		f[4*ng+i] = udg3;
		f[5*ng+i] = t45;
		f[6*ng+i] = t39+t5*(t31+t7*(t11-udg6))*(2.0/3.0)+t3*t7;
		f[7*ng+i] = t44*udg3+t7*t43*udg2+t5*t7*udg3*(t31+t7*(t11-udg6))*(2.0/3.0)+param1*t5*t6*t8*t15*(t4*udg1*(udg12+udg1*(t8*udg2*(t13-udg10)+t8*udg3*(t14-udg11))-t34*udg9)+t4*udg9*(t35-udg4));
		}
		{
		dstype t2 = udg2*udg2;
		dstype t3 = udg3*udg3;
		dstype t4 = param1-1.0;
		dstype t5 = 1.0/param2;
		dstype t6 = 1.0/param3;
		dstype t7 = -udg8;
		dstype t8 = -udg12;
		dstype t9 = 1.0/udg1;
		dstype t10 = t9*t9;
		dstype t11 = t9*t9*t9;
		dstype t13 = t9*udg2;
		dstype t14 = t9*udg3;
		dstype t15 = t9*udg4;
		dstype t26 = 1.0/t4;
		dstype t31 = t4*t9;
		dstype t32 = t5*t9;
		dstype t12 = t10*t10;
		dstype t16 = t10*udg4;
		dstype t17 = t10*udg2*udg3;
		dstype t18 = t13*udg5;
		dstype t19 = t14*udg5;
		dstype t20 = t11*udg2*udg5;
		dstype t21 = t11*udg3*udg5;
		dstype t22 = t13*udg9;
		dstype t23 = t14*udg9;
		dstype t24 = t11*udg2*udg9;
		dstype t25 = t11*udg3*udg9;
		dstype t27 = t2*t11;
		dstype t28 = t3*t11;
		dstype t42 = t4*t13;
		dstype t43 = t4*t14;
		dstype t44 = t5*t10*udg2;
		dstype t45 = t5*t10*udg3;
		dstype t46 = t5*t10*udg5;
		dstype t47 = t5*t10*udg9;
		dstype t48 = (t2*t10)/2.0;
		dstype t49 = (t3*t10)/2.0;
		dstype t55 = t32*(2.0/3.0);
		dstype t56 = t32*(4.0/3.0);
		dstype t69 = t9+t31;
		dstype t70 = param1*t6*t32;
		dstype t71 = (t5*t11*udg2*udg3)/3.0;
		dstype t29 = t20*2.0;
		dstype t30 = t25*2.0;
		dstype t33 = -t17;
		dstype t36 = -t20;
		dstype t38 = -t21;
		dstype t41 = -t24;
		dstype t57 = -t42;
		dstype t58 = -t43;
		dstype t59 = -t44;
		dstype t60 = -t45;
		dstype t61 = -t46;
		dstype t62 = -t47;
		dstype t63 = -t55;
		dstype t64 = t44*(2.0/3.0);
		dstype t65 = t45*(2.0/3.0);
		dstype t66 = t44*(4.0/3.0);
		dstype t67 = t45*(4.0/3.0);
		dstype t74 = -t71;
		dstype t81 = -t9*(t23-udg11);
		dstype t84 = t10*(t18-udg6)*-2.0;
		dstype t85 = t9*(t23-udg11)*-2.0;
		dstype t86 = t10*(t23-udg11)*-2.0;
		dstype t87 = t27+t28;
		dstype t96 = t10*(t23-udg11);
		dstype t102 = t48+t49;
		dstype t114 = -udg1*(t10*udg2*(t18-udg6)+t10*udg3*(t19-udg7));
		dstype t118 = -t32*(t9*(t19-udg7)+t9*(t22-udg10));
		dstype t128 = t5*(t21+t24+t10*(t19-udg7)+t10*(t22-udg10));
		dstype t37 = -t29;
		dstype t68 = t4*t33;
		dstype t92 = param1*t6*t59;
		dstype t93 = param1*t6*t60;
		dstype t98 = t87*udg1;
		dstype t99 = t13+t61;
		dstype t100 = t14+t62;
		dstype t103 = t102*udg1;
		dstype t104 = t102*udg5;
		dstype t105 = t102*udg9;
		dstype t115 = -udg1*(t96*udg3+t10*udg2*(t22-udg10));
		dstype t131 = t33+t128;
		dstype t101 = -t98;
		dstype t109 = -t4*(t103-udg4);
		dstype t116 = -t31*(t103-udg4);
		dstype t125 = t25+t37+t84+t96;
		dstype t129 = t7+t104+t114;
		dstype t130 = t8+t105+t115;
		dstype t117 = t10*t109;
		dstype t119 = t101+t102;
		dstype t120 = t4*t119;
		dstype t126 = t31*t119;
		dstype t121 = t120*udg1;
		dstype t122 = -t120;
		dstype t133 = t16+t117+t126;
		dstype t134 = param1*t5*t6*t10*t26*(t121-t4*(t103-udg4));
		dstype t135 = -t134;
		f_udg[0*ng+i] = 0.0;
		f_udg[1*ng+i] = t122-t2*t10-t5*t125*(2.0/3.0);
		f_udg[2*ng+i] = t131;
		f_udg[3*ng+i] = t64*(t81+t9*(t18-udg6)*2.0)+t45*(t9*(t19-udg7)+t9*(t22-udg10))+t14*t128-t133*udg2-t5*t13*t125*(2.0/3.0)+param1*t5*t6*t11*t26*(t109*udg5+t4*t129*udg1)*2.0+param1*t5*t6*t10*t26*(-t4*t129+t120*udg5+t4*udg1*(t87*udg5-udg1*(t2*t12*udg5+t3*t12*udg5+t11*udg2*(t18-udg6)*2.0+t11*udg3*(t19-udg7)*2.0)+t10*udg2*(t18-udg6)+t10*udg3*(t19-udg7)));
		f_udg[4*ng+i] = 0.0;
		f_udg[5*ng+i] = t131;
		f_udg[6*ng+i] = t122-t3*t10-t5*(t20-t30+t86+t10*(t18-udg6))*(2.0/3.0);
		f_udg[7*ng+i] = t45*(t85+t9*(t18-udg6))*(-2.0/3.0)+t44*(t9*(t19-udg7)+t9*(t22-udg10))+t13*t128-t133*udg3-t5*t14*(t20-t30+t86+t10*(t18-udg6))*(2.0/3.0)+param1*t5*t6*t10*t26*(-t4*t130+t120*udg9+t4*udg1*(t87*udg9+t96*udg3-udg1*(t2*t12*udg9+t3*t12*udg9+t11*udg2*(t22-udg10)*2.0+t11*udg3*(t23-udg11)*2.0)+t10*udg2*(t22-udg10)))+param1*t5*t6*t11*t26*(t4*t130*udg1-t4*udg9*(t103-udg4))*2.0;
		f_udg[8*ng+i] = 1.0;
		f_udg[9*ng+i] = t13*2.0-t46*(4.0/3.0)+t57;
		f_udg[10*ng+i] = t100;
		f_udg[11*ng+i] = t15+t116-t32*(t81+t9*(t18-udg6)*2.0)*(2.0/3.0)-t5*t20*(4.0/3.0)-t5*t25-t2*t4*t10+param1*t5*t6*t10*t26*(t4*t18+t4*udg1*(udg1*(t20+t10*(t18-udg6))-t10*udg2*udg5));
		f_udg[12*ng+i] = 0.0;
		f_udg[13*ng+i] = t100;
		f_udg[14*ng+i] = t46*(2.0/3.0)+t57;
		f_udg[15*ng+i] = t68+t118+t5*t21*(2.0/3.0)+t5*t41+param1*t5*t6*t10*t26*(t4*t22+t4*udg1*(udg1*(t24+t10*(t22-udg10))-t10*udg2*udg9));
		f_udg[16*ng+i] = 0.0;
		f_udg[17*ng+i] = t47*(2.0/3.0)+t58;
		f_udg[18*ng+i] = t99;
		f_udg[19*ng+i] = t68+t118+t5*t24*(2.0/3.0)+t5*t38+param1*t5*t6*t10*t26*(t4*t19+t4*udg1*(udg1*(t21+t10*(t19-udg7))-t10*udg3*udg5));
		f_udg[20*ng+i] = 1.0;
		f_udg[21*ng+i] = t99;
		f_udg[22*ng+i] = t14*2.0-t47*(4.0/3.0)+t58;
		f_udg[23*ng+i] = t15+t116+t55*(t85+t9*(t18-udg6))-t5*t25*(4.0/3.0)+t5*t36-t3*t4*t10+param1*t5*t6*t10*t26*(t4*t23+t4*udg1*(udg1*(t25+t96)-t10*udg3*udg9));
		f_udg[24*ng+i] = 0.0;
		f_udg[25*ng+i] = t4;
		f_udg[26*ng+i] = 0.0;
		f_udg[27*ng+i] = t69*udg2+param1*t6*t61;
		f_udg[28*ng+i] = 0.0;
		f_udg[29*ng+i] = 0.0;
		f_udg[30*ng+i] = t4;
		f_udg[31*ng+i] = t69*udg3+param1*t6*t62;
		f_udg[32*ng+i] = 0.0;
		f_udg[33*ng+i] = -t66;
		f_udg[34*ng+i] = t60;
		f_udg[35*ng+i] = t135-t5*t27*(4.0/3.0)-t5*t28;
		f_udg[36*ng+i] = 0.0;
		f_udg[37*ng+i] = t60;
		f_udg[38*ng+i] = t64;
		f_udg[39*ng+i] = t74;
		f_udg[40*ng+i] = 0.0;
		f_udg[41*ng+i] = t56;
		f_udg[42*ng+i] = 0.0;
		f_udg[43*ng+i] = t66+t92;
		f_udg[44*ng+i] = 0.0;
		f_udg[45*ng+i] = 0.0;
		f_udg[46*ng+i] = t63;
		f_udg[47*ng+i] = -t65;
		f_udg[48*ng+i] = 0.0;
		f_udg[49*ng+i] = 0.0;
		f_udg[50*ng+i] = t32;
		f_udg[51*ng+i] = t45+t93;
		f_udg[52*ng+i] = 0.0;
		f_udg[53*ng+i] = t32;
		f_udg[54*ng+i] = 0.0;
		f_udg[55*ng+i] = t44;
		f_udg[56*ng+i] = 0.0;
		f_udg[57*ng+i] = 0.0;
		f_udg[58*ng+i] = 0.0;
		f_udg[59*ng+i] = t70;
		f_udg[60*ng+i] = 0.0;
		f_udg[61*ng+i] = 0.0;
		f_udg[62*ng+i] = 0.0;
		f_udg[63*ng+i] = 0.0;
		f_udg[64*ng+i] = 0.0;
		f_udg[65*ng+i] = t65;
		f_udg[66*ng+i] = t59;
		f_udg[67*ng+i] = t74;
		f_udg[68*ng+i] = 0.0;
		f_udg[69*ng+i] = t59;
		f_udg[70*ng+i] = -t67;
		f_udg[71*ng+i] = t135-t5*t27-t5*t28*(4.0/3.0);
		f_udg[72*ng+i] = 0.0;
		f_udg[73*ng+i] = 0.0;
		f_udg[74*ng+i] = t32;
		f_udg[75*ng+i] = t45;
		f_udg[76*ng+i] = 0.0;
		f_udg[77*ng+i] = t32;
		f_udg[78*ng+i] = 0.0;
		f_udg[79*ng+i] = t44+t92;
		f_udg[80*ng+i] = 0.0;
		f_udg[81*ng+i] = t63;
		f_udg[82*ng+i] = 0.0;
		f_udg[83*ng+i] = -t64;
		f_udg[84*ng+i] = 0.0;
		f_udg[85*ng+i] = 0.0;
		f_udg[86*ng+i] = t56;
		f_udg[87*ng+i] = t67+t93;
		f_udg[88*ng+i] = 0.0;
		f_udg[89*ng+i] = 0.0;
		f_udg[90*ng+i] = 0.0;
		f_udg[91*ng+i] = 0.0;
		f_udg[92*ng+i] = 0.0;
		f_udg[93*ng+i] = 0.0;
		f_udg[94*ng+i] = 0.0;
		f_udg[95*ng+i] = t70;
		}
	});
}

