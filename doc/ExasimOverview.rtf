{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 .SFNS-Regular_wdth_opsz180000_GRAD_wght2580000;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 .SFNS-Regular_wdth_opsz110000_GRAD_wght2580000;\f4\fnil\fcharset0 .SFNS-Regular_wdth_opsz140000_GRAD_wght2580000;\f5\fnil\fcharset0 .SFNSMono-Light_YAXS140B3B6_wght1F40000;
\f6\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red12\green12\blue12;\red255\green255\blue255;\red14\green14\blue14;
\red32\green79\blue153;\red0\green0\blue0;\red12\green12\blue12;\red231\green231\blue231;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c5098\c5098\c5098;\cssrgb\c100000\c100000\c100000;\cssrgb\c6275\c6275\c6275;
\cssrgb\c16078\c39216\c66667;\cssrgb\c0\c0\c0\c14902;\cssrgb\c5098\c5098\c5098\c5098;\cssrgb\c92549\c92549\c92549;\cssrgb\c0\c0\c0;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Explain the codebase to a newcomer. What is the general structure, what are the important things to know, and what are some pointers for things to learn next?\
\
\pard\pardeftab720\sa160\partightenfactor0

\f1\b\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Exasim overview for newcomers\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs30 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sa80\partightenfactor0

\f3\b\fs28 \cf2 \cb3 \strokec2 Exasim
\f2\b0 \'a0generates high\uc0\u8209 order Discontinuous Galerkin (DG/HDG) C++ codes for a wide range of PDEs, targeting CPUs and GPUs via\'a0\cf5 \strokec5 Kokkos\cf2 \strokec2 . The repo is organized by the major stages of the workflow\'97model specification, code generation, compilation, and execution.\
\pard\pardeftab720\sa80\partightenfactor0

\f4\b\fs40 \cf2 Repository structure\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalb \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrnil \clpadt160 \clpadl0 \clpadb160 \clpadr480 \gaph\cellx4320
\clvertalb \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrnil \clpadt160 \clpadl140 \clpadb160 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f3\fs24\fsmilli12250 \cf2 Path\cb1 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 Purpose\cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\b0\fs21\fsmilli10719 \cf2 \cb8 backend/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 Performance\uc0\u8209 critical C++ solver. Organized into subsystems:\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Common
\f2\fs24\fsmilli12250 \cb3 \strokec9 \'a0(precision/back\uc0\u8209 end abstraction),\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Discretization
\f2\fs24\fsmilli12250 \cb3 \strokec9 \'a0(geometry, kernels),\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Model
\f2\fs24\fsmilli12250 \cb3 \strokec9 \'a0(physics kernels, symbolic DSL \uc0\u8594  C++),\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Solver
\f2\fs24\fsmilli12250 \cb3 \strokec9 \'a0(GMRES/PTC),\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Preconditioning
\f2\fs24\fsmilli12250 \cb3 \strokec9 ,\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Solution
\f2\fs24\fsmilli12250 \cb3 \strokec9 , and\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 Main
\f2\fs24\fsmilli12250 \cb3 \strokec9 .\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 frontends/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 High\uc0\u8209 level PDE interface layers in\'a0
\f3\b \strokec2 Matlab
\f2\b0 \strokec9 ,\'a0
\f3\b \strokec2 Julia
\f2\b0 \strokec9 , and\'a0
\f3\b \strokec2 Python
\f2\b0 \strokec9 . Each provides modules for mesh generation, preprocessing, post\uc0\u8209 processing, and code generation (
\f5\fs21\fsmilli10719 \cb8 \strokec2 Gencode
\f2\fs24\fsmilli12250 \cb3 \strokec9 ). These scripts transform PDE expressions into compilable C++ kernels.\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 examples/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 Ready\uc0\u8209 to\u8209 run PDE setups (Poisson, Euler, Navier\'96Stokes, etc.) illustrating the workflow from model definition to visualization.\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 kokkos/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 Vendor\uc0\u8209 neutral parallel\u8209 execution library used for CPU/GPU portability. Needs to be built (serial/CUDA/HIP) before compiling Exasim.\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 text2code/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 Optional C++/SymEngine\uc0\u8209 based code generator and preprocessor, producing faster, standalone executables without relying on Matlab/Julia/Python at runtime.\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 install/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 CMake scripts and helper utilities for setting paths and building Exasim across languages and platforms (HPC notes in\'a0
\f5\fs21\fsmilli10719 \cb8 \strokec2 hpc.txt
\f2\fs24\fsmilli12250 \cb3 \strokec9 ).\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 doc/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 PDF manual and logos.\cf0 \cb1 \cell \row

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalt\clvertalbase \clshdrawnil \clwWidth1949\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl0 \clpadb200 \clpadr480 \gaph\cellx4320
\clvertalt\clvertalbase \clshdrawnil \clwWidth14050\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadt200 \clpadl140 \clpadb200 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f5\fs21\fsmilli10719 \cf2 \cb8 \strokec2 build/
\f2\fs24\fsmilli12250 \cf0 \cb1 \strokec9 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf2 \cb3 Empty build output directory (created after CMake compilation).\cf0 \cb1 \cell \lastrow\row
\pard\pardeftab720\partightenfactor0

\fs28 \cf2 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f4\b\fs40 \cf2 \cb3 Key concepts and workflow\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls1\ilvl0
\f3\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Model specification
\f2\b0 \cb1 \uc0\u8232 \cb3 Define PDEs, boundary conditions, and parameters in a front-end script (
\f5\fs24\fsmilli12250 \cb8 pdeapp.py
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 pdeapp.jl
\f2\fs28 \cb3 , or\'a0
\f5\fs24\fsmilli12250 \cb8 pdeapp.m
\f2\fs28 \cb3 ), using helper modules (
\f5\fs24\fsmilli12250 \cb8 Preprocessing
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 Mesh
\f2\fs28 \cb3 , etc.).\cb1 \
\ls1\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Code generation
\f2\b0 \cb1 \uc0\u8232 
\f5\fs24\fsmilli12250 \cb8 frontends/*/Gencode
\f2\fs28 \cb3 \'a0converts symbolic expressions (via SymPy/Text2Code) into C++ kernels in\'a0
\f5\fs24\fsmilli12250 \cb8 backend/Model
\f2\fs28 \cb3 . Generated files feed directly into the backend.\cb1 \
\ls1\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend compilation
\f2\b0 \cb1 \uc0\u8232 \cb3 Use CMake (see\'a0
\f5\fs24\fsmilli12250 \cb8 install
\f2\fs28 \cb3 \'a0directory) to compile the backend with the correct Kokkos build (CPU, CUDA, or HIP). The build step produces executables (
\f5\fs24\fsmilli12250 \cb8 cpuEXASIM
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 cpumpiEXASIM
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 gpuEXASIM
\f2\fs28 \cb3 , etc.).\cb1 \
\ls1\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Execution & post-processing
\f2\b0 \cb1 \uc0\u8232 \cb3 Run the produced executable, which consumes\'a0
\f5\fs24\fsmilli12250 \cb8 datain/
\f2\fs28 \cb3 \'a0inputs and emits results to\'a0
\f5\fs24\fsmilli12250 \cb8 dataout/
\f2\fs28 \cb3 . Post-processing scripts assist with visualization (e.g., Paraview).\cb1 \
\pard\pardeftab720\sa80\partightenfactor0

\f4\b\fs40 \cf2 \cb3 Important details\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls2\ilvl0
\f3\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Portability:
\f2\b0 \'a0Precision, integer size, and backend (CPU/CUDA/HIP) are controlled through macros (
\f5\fs24\fsmilli12250 \cb8 USE_FLOAT
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 USE_LONG
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 HAVE_CUDA
\f2\fs28 \cb3 ) in\'a0
\f5\fs24\fsmilli12250 \cb8 backend/Common/common.h
\f2\fs28 \cb3 .\cb1 \
\ls2\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Solver architecture:
\f2\b0 \'a0HDG/DG kernels and matrix-free GMRES with optional preconditioners; supports hybridized methods and adaptive mesh/solution handling.\cb1 \
\ls2\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dependencies:
\f2\b0 \'a0BLAS/LAPACK, MPI, Kokkos (mandatory), optional METIS for partitioning, and Text2Code for faster code generation. Build Kokkos\'a0
\f6\i before
\f2\i0 \'a0building Exasim.\cb1 \
\ls2\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Testing/Examples:
\f2\b0 \'a0Begin with\'a0
\f5\fs24\fsmilli12250 \cb8 examples/Poisson/poisson2d
\f2\fs28 \cb3 \'a0to see end-to-end setup, generation, build, run, and visualization.\cb1 \
\ls2\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Documentation:
\f2\b0 \'a0
\f5\fs24\fsmilli12250 \cb8 README.md
\f2\fs28 \cb3 \'a0provides high-level instructions;\'a0
\f5\fs24\fsmilli12250 \cb8 doc/Exasim.pdf
\f2\fs28 \cb3 \'a0is the comprehensive manual.\cb1 \
\pard\pardeftab720\sa80\partightenfactor0

\f4\b\fs40 \cf2 \cb3 Next steps for newcomers\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls3\ilvl0
\f3\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Build prerequisites
\f2\b0 \cb1 \uc0\u8232 \cb3 Follow Kokkos build instructions in\'a0
\f5\fs24\fsmilli12250 \cb8 README.md
\f2\fs28 \cb3 \'a0or\'a0
\f5\fs24\fsmilli12250 \cb8 install/installkokkos.txt
\f2\fs28 \cb3 \'a0(CPU, CUDA, or HIP variant).\cb1 \
\ls3\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Run an example
\f2\b0 \cb1 \uc0\u8232 \cb3 Try\'a0
\f5\fs24\fsmilli12250 \cb8 examples/Poisson/poisson2d/pdeapp.py
\f2\fs28 \cb3 \'a0or its Julia/Matlab counterparts to grasp the workflow.\cb1 \
\ls3\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Dive into front-end modules
\f2\b0 \cb1 \uc0\u8232 \cb3 Explore\'a0
\f5\fs24\fsmilli12250 \cb8 frontends/Python/Gencode
\f2\fs28 \cb3 \'a0(or\'a0
\f5\fs24\fsmilli12250 \cb8 Julia
\f2\fs28 \cb3 ,\'a0
\f5\fs24\fsmilli12250 \cb8 Matlab
\f2\fs28 \cb3 ) to understand how symbolic PDE descriptions are turned into C++.\cb1 \
\ls3\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explore backend internals
\f2\b0 \cb1 \uc0\u8232 \cb3 Start with\'a0
\f5\fs24\fsmilli12250 \cb8 backend/README.md
\f2\fs28 \cb3 , then trace through\'a0
\f5\fs24\fsmilli12250 \cb8 Discretization
\f2\fs28 \cb3 \'a0and\'a0
\f5\fs24\fsmilli12250 \cb8 Model
\f2\fs28 \cb3 \'a0to learn how Exasim structures kernels and solver components.\cb1 \
\ls3\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Read the manual
\f2\b0 \cb1 \uc0\u8232 
\f5\fs24\fsmilli12250 \cb8 doc/Exasim.pdf
\f2\fs28 \cb3 \'a0provides the mathematical background, advanced features (e.g., hybridized DG, preconditioners), and comprehensive usage instructions.\cb1 \
\ls3\ilvl0
\f3\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	6	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Investigate Text2Code
\f2\b0 \'a0(optional but recommended for production)\cb1 \uc0\u8232 \cb3 Build\'a0
\f5\fs24\fsmilli12250 \cb8 text2code
\f2\fs28 \cb3 \'a0per\'a0
\f5\fs24\fsmilli12250 \cb8 text2code/install.txt
\f2\fs28 \cb3 \'a0to remove run-time Matlab/Julia/Python dependencies and gain performance.\cb1 \
\pard\pardeftab720\sa80\partightenfactor0
\cf2 \cb3 With these components in mind, newcomers can progressively move from running canned examples to defining custom PDE models and extending the solver or front-end capabilities.\
}